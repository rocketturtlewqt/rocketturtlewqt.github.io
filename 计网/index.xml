<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计网s on RocketTurtle</title>
    <link>https://rocketturtlewqt.github.io/%E8%AE%A1%E7%BD%91/</link>
    <description>Recent content in 计网s on RocketTurtle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 May 2021 18:28:24 +0800</lastBuildDate><atom:link href="https://rocketturtlewqt.github.io/%E8%AE%A1%E7%BD%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>应用层协议http</title>
      <link>https://rocketturtlewqt.github.io/%E8%AE%A1%E7%BD%91/%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AEhttp/</link>
      <pubDate>Sat, 29 May 2021 18:28:24 +0800</pubDate>
      
      <guid>https://rocketturtlewqt.github.io/%E8%AE%A1%E7%BD%91/%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AEhttp/</guid>
      <description>基本常识  Web页面是由对象组成的。这个对象可以是一个html文件，也可以是图片等，且它们可以通过一个url地址寻找。 浏览器实现了HTTP的客户端，Web服务器实现了HTTP的服务器端。 HTTP是一个无状态的协议。当HTTP客户端多次请求同一个对象，HTTP服务器端并不会因为此前返回过这个对象就不再响应，而是每请求一次就响应一次。 客户端套接字是客户端应用进程与TCP连接之门，负责HTTP请求报文的发送和响应报文的接收。服务端套接字是服务端应用进程与TCP连接之门，负责HTTP响应报文的发送和请求报文的接收。  持续连接与非持续连接 非持续连接  http1.0 假若服务器目前有一个html文件和10张图片需要响应，那么对于非持续连接分为以下几步   http客户端通过80端向http服务端发起一条tcp连接 建立tcp连接后，http客户端将http请求报文通过80端口发送给http服务端 http服务端进程通过套接字接收http请求报文，从存储器中读取响应的内容，并通过套接字发送给http客户端 服务端进程通知tcp断开tcp连接（要等http客户端接收到响应报文后才会真正断开） http客户端接收到响应报文，断开tcp连接 有几个对象就重复几遍1~5   建立tcp的过程还伴随有三次握手，http请求报文是随着第三次握手发送给http服务端的  持续连接  http1.1 持续连接使得传输的对象能够在同一条tcp连接上进行。对于非持续连接，完成一个对象的请求和响应过程都需要2个RTT时间，客户端和服务端都要为每一条tcp连接分配缓存和变量，所以持续连接在一定程度上节约了时间。  </description>
    </item>
    
  </channel>
</rss>
